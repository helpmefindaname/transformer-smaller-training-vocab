[tool.poetry]
name = "transformer-smaller-training-vocab"
version = "0.4.1"
description = "Temporary remove unused tokens during training to save ram and speed."
authors = ["Benedikt Fuchs <benedikt.fuchs.staw@hotmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "transformer_smaller_training_vocab" }]
repository = "https://github.com/helpmefindaname/transformer-smaller-training-vocab"

[tool.poetry.dependencies]
python = "^3.9"
transformers = { version = "^4.1", extras = ["torch", "sentencepiece"] }
torch = ">=1.8.0,<3.0.0,!=2.0.1"

[tool.poetry.group.datasets.dependencies]
datasets = "^2.0.0"

[tool.poetry.group.dev.dependencies]
transformers = { version = "!=4.51.*"}
pytest = "^8.0.0"
pytest-mypy = "^1.0.0"
black = "^25.0.0"
ruff = "^0.11.5"
pytest-github-actions-annotate-failures = "^0.1.8"
pytest-xdist = "^3.1.0"
pytest-cov = "^4.0.0"
pytest-ruff = "^0.4.0"
pytest-black-ng = "^0.4.1"


[tool.poetry.group.docs.dependencies]
sphinx-github-style = "^1.0.2"
sphinx-autodoc-typehints = "^1.23.0"
myst-parser = "^1.0.0"
sphinx = "<6.0.0"
importlib-metadata = "^6.6.0"
sphinx-multiversion = "^0.2.4"
pydata-sphinx-theme = "^0.13.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 120
target-version = ['py39']


[tool.ruff]
line-length = 120
target-version = 'py39'


[tool.ruff.lint]
select = [
  "C4",
  "COM",
  "D",
  "E",
  "EXE",
  "F",
  "I",
  "INP",
  "ISC",
  "NPY",
  "PD",
  "PGH",
  "PIE",
  "PLE",
  "PYI",
  "Q",
  "RSE",
  "RUF",
  "SIM",
  "T10",
  "TID",
  "UP",
  "W",
  "YTT",
]

ignore = [
  "COM812", # Do not force trailing commas for function argument lists
  "D100",   # Don't force presence of docstrings (D100-D107)
  "D101",
  "D102",
  "D103",
  "D104",
  "D105",
  "D107",
  "E501",   # Ignore line too long
]

unfixable = [
  "ERA",    # Do not delete commented code
  "EXE001", # Do not check python files for executability, doesn't work well on windows
  "EXE002", # Do not check python files for executability, doesn't work well on windows
  "F841",   # Do not remove unused variables automatically
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
addopts = "--mypy -n auto --black --ruff"
filterwarnings = [
    "error",
    "ignore:SelectableGroups dict interface is deprecated. Use select.",
    'ignore:distutils Version classes are deprecated. Use packaging.version instead.', # numpy uses deprecated version check
]  # Convert all warnings to errors, imo warnings that are not treated as errors will be ignored by most people.
# My approach is to throw an error and let the programmar check if the error is intended (then add it to the filterwarnings) or not (then fix it!)

testpaths=["transformer_smaller_training_vocab", "tests"]


[tool.mypy]
ignore_missing_imports = true
disallow_untyped_calls = true
warn_unused_ignores = true
warn_no_return = true
